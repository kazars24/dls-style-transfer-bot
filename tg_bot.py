import logging

from aiogram import Bot, Dispatcher,  executor, types

from utils.loss_and_loaders import image_loader, save_image
from utils.model import NeuralStyleTransfer

# logging level
logging.basicConfig(level=logging.INFO)

# initialize bot
bot = Bot(token='6365644640:AAFODi5jBkVdZ3c79TEEs4CLAaNvbTpKgUU')
dp = Dispatcher(bot)

img_type = ['content_image', 'style_image']
img_idx = 0


# start message
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n'
                                            '–Ø –ø–æ–º–æ–≥—É –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—Ç–∏–ª—å —Å –æ–¥–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–∞ –¥—Ä—É–≥—É—é üòé'
                                            ''.format(message.from_user),
                           parse_mode='html')

    # keyboard
    markup_general = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button3_general = types.KeyboardButton('–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—Ç–∏–ª—å')

    markup_general.add(button3_general)

    await bot.send_message(message.chat.id, '–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? ‚û°Ô∏è /help')
    await bot.send_message(message.chat.id, '–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º)',
                           parse_mode='html', reply_markup=markup_general)


# help
@dp.message_handler(commands=['help'])
async def help_message(message: types.Message):
    await bot.send_message(message.chat.id, '–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—Ç–∏–ª—å —Å –æ–¥–Ω–æ–π '
                                            '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–∞ –¥—Ä—É–≥—É—é. '
                                            '–î–ª—è —ç—Ç–æ–≥–æ:\n' 
                                            '1. –ù–∞–∂–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—Ç–∏–ª—å".\n'
                                            '2. –ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å.\n'
                                            '3. –ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ, —Å—Ç–∏–ª—å –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å.\n')


# chat
@dp.message_handler(content_types=['text'])
async def chat(message: types.Message):
    if message.chat.type == 'private':
        if message.text == '–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—Ç–∏–ª—å':
            await bot.send_message(message.chat.id,
                                   '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Ç–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ:\n'
                                   '1. —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å,\n'
                                   '2. —Ñ–æ—Ç–æ, —Å—Ç–∏–ª—å –∫–æ—Ç–æ—Ä–æ–π –º—ã –±—É–¥–µ–º –ø–æ–≤—Ç–æ—Ä—è—Ç—å.')
        else:
            await bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω—è–ª —Ç–≤–æ—é –∫–æ–º–∞–Ω–¥—É(')


# save photo
@dp.message_handler(content_types=['photo'])
async def photo_handler(message: types.Message):
    global img_type
    global img_idx
    photo = message.photo.pop()
    img_idx += 1
    name = img_type[img_idx % 2]
    await photo.download(f'./images/source/{name}.jpg')
    await bot.send_message(message.chat.id, '–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.')

    style_reply_markup = types.InlineKeyboardMarkup(row_width=2, one_time_keyboard=True)
    style_reply_button1 = types.InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='continue')
    style_reply_markup.add(style_reply_button1)

    await bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"', reply_markup=style_reply_markup)



# callback
@dp.callback_query_handler(lambda call: True)
async def callback_inline(call):
    await launch_nst(call.message)


# launch style transfer
async def launch_nst(message):
    print('ok')
    content_image_name = 'images/source/content_image.jpg'
    style_image_name = 'images/source/style_image.jpg'

    nst = NeuralStyleTransfer()

    await bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏...')

    content_img = image_loader(content_image_name)
    style_img = image_loader(style_image_name)
    input_img = content_img.clone()

    output = nst.run_style_transfer(content_img, style_img, input_img)
    save_image(output, 'images/results/result_img.jpg')

    await bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ!')

    result = open('images/results/result_img.jpg', 'rb')

    await bot.send_photo(message.chat.id, result)

    await bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ.')


# launch long polling
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
